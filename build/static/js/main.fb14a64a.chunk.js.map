{"version":3,"sources":["Components/ForecastListItem.js","Components/LiveTemperature.js","Components/SearchBar.js","Components/Details.js","Components/Panel.js","Components/SnackBarContentWrapper.js","App.js","serviceWorker.js","index.js"],"names":["ForecastListItem","props","key","day","time","Grid","container","direction","alignItems","style","padding","item","justify","spacing","icon","Typography","variant","temperatureLow","temperatureHigh","summary","LiveTemperature","undefined","currently","fontSize","temperature","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","breakpoints","up","searchIcon","height","pointerEvents","display","justifyContent","inputRoot","color","inputInput","transition","transitions","create","SearchBar","regex","classes","className","InputBase","placeholder","onKeyPress","event","test","target","value","searchListener","root","input","inputProps","Details","marginBottom","textAlign","apparentTemperature","humidity","precipProbability","windSpeed","subtitle","paper","text","secondary","Panel","Paper","xs","title","type","data","useVariant","useIcon","success","background","error","info","primary","main","warning","amber","iconVariant","opacity","message","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","SnackBarContentWrapper","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","IconButton","aria-label","onClick","backgroundImage","card","maxWidth","whiteText","flexGrow","menuButton","padded","paperTheme","loader","margin","ColorLinearProgress","withStyles","colorPrimary","barColorPrimary","LinearProgress","Boolean","window","location","hostname","match","ReactDOM","render","useState","appName","city","updateCity","forecast","updateForecast","lat","updateLat","lng","updateLng","loaded","updateLoaded","anchorEl","setAnchorEl","snackOpen","setSnackOpen","snackVar","setSnackVar","snackMsg","setSnackMsg","open","testText","useEffect","axios","get","then","response","console","log","catch","handleSnackOpen","handleSnackClose","reason","handleClose","AppBar","Toolbar","records","fields","state","latitude","longitude","edge","aria-haspopup","address","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","Container","md","daily","map","Snackbar","autoHideDuration","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fb14a64a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\n\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\n\r\nfunction Icon(icon) {\r\n    if (icon == \"rain\") {\r\n        return <CloudIcon />\r\n    } else if (icon == \"partly-cloudy-day\") {\r\n        return <CloudIcon />\r\n    } else if (icon == \"cloudy\") {\r\n        return <CloudIcon />\r\n    } else if (icon == \"clear-day\") {\r\n        return <Brightness5Icon />\r\n    } else {\r\n        return <Brightness5Icon />\r\n    }\r\n}\r\n\r\nfunction ForecastListItem(props) {\r\n    return (\r\n        <div key={props.day.time}>\r\n            <Grid container direction='column' alignItems='flex-start' style={{padding: '8px'}}>\r\n                <Grid item>\r\n                    <Grid container direction='row' justify=\"center\" spacing={2}>\r\n                        <Grid item>\r\n                            {Icon(props.day.icon)}\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant='body1'>\r\n                                {props.day.temperatureLow} / {props.day.temperatureHigh}\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Typography variant='body2'>\r\n                        {props.day.summary}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForecastListItem\r\n","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport CloudIcon from '@material-ui/icons/Cloud';\r\n\r\nfunction Icon(icon) {\r\n    if (icon == \"rain\") {\r\n        return <CloudIcon />\r\n    } else if (icon == \"partly-cloudy-day\") {\r\n        return <CloudIcon />\r\n    } else if (icon == \"cloudy\") {\r\n        return <CloudIcon />\r\n    } else if (icon == \"clear-day\") {\r\n        return <Brightness5Icon />\r\n    } else {\r\n        return <Brightness5Icon />\r\n    }\r\n}\r\n\r\nfunction LiveTemperature(props) {\r\n    return (\r\n        <div>\r\n            <Grid container direction='column' alignItems='center'>\r\n                <Grid item>\r\n                    {\r\n                        props.currently != undefined ?\r\n                        Icon(props.currently.icon) : null\r\n                    }\r\n                </Grid> \r\n                <Grid item>\r\n                    <Typography style={{fontSize: '35px'}} variant='body1'>\r\n                        {\r\n                            props.currently != undefined ? \r\n                            props.currently.temperature : null\r\n                        }\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiveTemperature\r\n","import React from 'react'\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n}));\r\n\r\n\r\nfunction SearchBar(props) {\r\n\r\n  const regex = /^\\d{5}$/\r\n  const classes = useStyles();\r\n\r\n  const sendCallback = event => {\r\n      if (event.key === 'Enter') {\r\n        if (regex.test(event.target.value)) {\r\n          props.searchListener(event.target.value)\r\n        } else {\r\n          props.searchListener(0);\r\n        }\r\n      }\r\n  }\r\n\r\n  return (\r\n      <div className={classes.search}>\r\n          <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n          </div>\r\n          <InputBase\r\n          placeholder=\"Search…\"\r\n          onKeyPress={sendCallback}\r\n          classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n          }}\r\n          inputProps={{ 'aria-label': 'search' }}\r\n          />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n","import React from 'react'\r\nimport {Typography} from '@material-ui/core'\r\n\r\nfunction Details(props) {\r\n    if (props.currently != undefined) {\r\n        return (\r\n            <div>\r\n                <Typography variant='h6' style={{marginBottom: '10px', textAlign: 'left'}}>\r\n                    Details:\r\n                </Typography>\r\n                <Typography style={{textAlign: 'left'}} variant='body1'> \r\n                    {props.currently.summary}\r\n                </Typography>\r\n                <Typography style={{textAlign: 'left'}} variant='body1'> \r\n                    Feels like {props.currently.apparentTemperature}\r\n                </Typography>\r\n                <Typography style={{textAlign: 'left'}} variant='body1'> \r\n                    {props.currently.humidity * 100}% Humidity\r\n                </Typography>\r\n                <Typography style={{textAlign: 'left'}} variant='body1'> \r\n                    {props.currently.precipProbability * 100}% Chance of Percipitation\r\n                </Typography>\r\n                <Typography style={{textAlign: 'left'}} variant='body1'> \r\n                    Winds are blowing at {props.currently.windSpeed} mph\r\n                </Typography>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default Details\r\n","import React, { useState, useEffect } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Details from './Details';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    subtitle: {\r\n      marginBottom: '20px',\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'left',\r\n      color: theme.palette.text.secondary,\r\n    }\r\n  }));\r\n\r\nfunction Panel(props) {\r\n\r\n    // Pass in data to be displayed through props, along with Component type and Icon\r\n\r\n    const classes = useStyles();\r\n\r\n    const useIcon = type => {\r\n        switch (type) {\r\n            case 'loc':\r\n                return <LocationOnIcon/>\r\n            case 'help':\r\n                return <HelpIcon /> \r\n            default:\r\n                return <LocationOnIcon />\r\n        }\r\n    }\r\n\r\n    const useVariant = type => {\r\n        switch (type) {\r\n            case 'current-forecast-details':\r\n                if (props.data.currently != undefined) {\r\n                    return <Details currently={props.data.currently} />\r\n                } else {\r\n                    return <Typography variant='body1'>Error with data!</Typography>\r\n                }\r\n            case 'text': \r\n                if (props.data != undefined) {\r\n                    return <Typography variant='body1'>{props.data}</Typography>\r\n                } else {\r\n                    return <Typography variant='body1'>Error with data!</Typography>\r\n                }\r\n            default:\r\n                return <h1>Error with Variant type!</h1>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <Grid container direction='row'>\r\n                <Grid item xs={11}>\r\n                    <Grid container direction='column'>\r\n                        <Grid item>\r\n                            <Typography className={classes.subtitle} style={{textAlign: 'left'}} variant='h5'>\r\n                                {props.title}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            {useVariant(props.variant)}\r\n                            {/* Conditionally render icon through props */}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    {useIcon(props.icon)} \r\n                </Grid> \r\n            </Grid>\r\n            \r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Panel\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    success: {\r\n      background: \"linear-gradient(-90deg, rgba(76,189,97,1) 0%, rgba(0,217,123,1) 100%)\",\r\n    },\r\n    error: {\r\n      background: \"linear-gradient(-90deg, rgba(194,24,24,1) 0%, rgba(255,76,0,1) 100%)\",\r\n    },\r\n    info: {\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n      backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n      fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n      opacity: 0.9,\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n  }));\r\n\r\n  const variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n  };\r\n\r\nfunction SnackBarContentWrapper(props) {\r\n    const classes = useStyles();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n        className={clsx(classes[variant], className)}\r\n        aria-describedby=\"client-snackbar\"\r\n        message={\r\n            <span id=\"client-snackbar\" className={classes.message}>\r\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n            {message}\r\n            </span>\r\n        }\r\n        action={[\r\n            <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n            <CloseIcon className={classes.icon} />\r\n            </IconButton>,\r\n        ]}\r\n        {...other}\r\n        />\r\n    );\r\n}\r\n\r\nSnackBarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n  };\r\n\r\nexport default SnackBarContentWrapper\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { LinearProgress } from '@material-ui/core';\r\nimport ForecastListItem from './Components/ForecastListItem'\r\nimport LiveTemperature from './Components/LiveTemperature';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport SearchBar from './Components/SearchBar';\r\nimport Panel from './Components/Panel';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackBarContentWrapper from './Components/SnackBarContentWrapper'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  theme: {\r\n    backgroundImage: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n    color: '#ffffff'\r\n  },\r\n  card: {\r\n    maxWidth: '345',\r\n    textAlign: 'left'\r\n  },\r\n  whiteText: {\r\n    color: '#ffffff'\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '#f7f7f7',\r\n    height: '100vh',\r\n    width: '100vw'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  subtitle: {\r\n    marginBottom: '20px',\r\n  },\r\n  padded: {\r\n    padding: theme.spacing(3, 2)\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  paperTheme: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: '#ffffff',\r\n    backgroundImage: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)'\r\n  },\r\n  loader: {\r\n    display: 'block',\r\n    margin: 'auto'\r\n  }\r\n}));\r\n\r\nconst ColorLinearProgress = withStyles({\r\n  colorPrimary: {\r\n    backgroundColor: '#667eea',\r\n  },\r\n  barColorPrimary: {\r\n    backgroundColor: '#764ba2',\r\n  },\r\n})(LinearProgress);\r\n\r\nexport default function App() {\r\n\r\n  const [appName, changeAppName] = useState('WeatherHub')\r\n  const [city, updateCity] = useState('Sykesville, MD')\r\n  const [forecast, updateForecast] = useState({})\r\n  const [lat, updateLat] = useState(36.9956066)\r\n  const [lng, updateLng] = useState(-91.0145714)\r\n  const [loaded, updateLoaded] = useState(false)\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  //SnackBar Open/Close\r\n  const [snackOpen, setSnackOpen] = useState(false);\r\n  const [snackVar, setSnackVar] = useState('error')\r\n  const [snackMsg, setSnackMsg] = useState('default message')\r\n\r\n  const classes = useStyles();\r\n  const open = Boolean(anchorEl);\r\n  const testText = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce porttitor non ipsum et feugiat. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis imperdiet nisl sed metus accumsan commodo. Maecenas urna orci, placerat ut lobortis eu, facilisis nec augue. Etiam eu odio quis ex luctus imperdiet sed eget mi. Fusce volutpat vel libero nec dapibus. In hac habitasse platea dictumst.\"\r\n\r\n  useEffect(() => {\r\n    updateLoaded(false)\r\n    axios.get(`/forecast/09b2001e4b878941580a9e3460cb83e4/${lat},${lng}`)\r\n    .then(response => {\r\n      updateForecast(response.data)\r\n      console.log(\"Forecast: Got it!  ===  \" + response.data)\r\n    })\r\n    .catch(error => {\r\n      console.log(\"Error getting Forecast: \" + error)\r\n    })\r\n  }, [lat, lng])\r\n\r\n  useEffect(() => {\r\n    if (forecast.currently != undefined) {\r\n      updateLoaded(true)\r\n    } else {\r\n      console.log(\"Forecast is undefined.\")\r\n    }\r\n  }, [forecast])\r\n\r\n  const searchCallback = search => {\r\n    if (!search) {\r\n      handleSnackOpen('error', 'Invalid search, please try again.')\r\n    } else {\r\n      axios.get(`https://public.opendatasoft.com/api/records/1.0/search/?dataset=us-zip-code-latitude-and-longitude&q=${search}`)\r\n      .then(response => {\r\n        var data = response.data\r\n\r\n        if (data.records[0] != undefined) {\r\n          updateCity(data.records[0].fields.city + \", \" + data.records[0].fields.state)\r\n          updateLat(data.records[0].fields.latitude)\r\n          updateLng(data.records[0].fields.longitude)\r\n        } else {\r\n          handleSnackOpen('error', `Zip-code not found: ${search}`);\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleSnackOpen = (variant, message) => {\r\n    setSnackVar(variant)\r\n    setSnackMsg(message)\r\n    setSnackOpen(true)\r\n  }\r\n  const handleSnackClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setSnackOpen(false);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleMenuClick = (address) => {\r\n    handleClose()\r\n  };\r\n\r\n  if (!loaded) {\r\n    return(\r\n      <div className={classes.root}>\r\n      <AppBar className={classes.theme} position=\"static\">\r\n          <Toolbar>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              {appName}\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ColorLinearProgress />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className={classes.root}>\r\n  \r\n      <AppBar className={classes.theme} position=\"static\">\r\n          <Toolbar>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n              {appName}\r\n            </Typography>\r\n            <SearchBar searchListener={searchCallback} />\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"display more actions\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMenuClick}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleClose}>Metric</MenuItem>\r\n              <MenuItem onClick={handleClose}>Imperial</MenuItem>\r\n            </Menu>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Container className={classes.padded} maxWidth=\"lg\">\r\n          <Grid container direction='row' spacing={2}>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <Grid container direction='column' spacing={2}>\r\n  \r\n                <Grid item>\r\n                  <Paper className={classes.paperTheme}>\r\n                    <LiveTemperature currently={forecast.currently} />\r\n                  </Paper>\r\n                </Grid>\r\n  \r\n                <Grid item>\r\n                  <Paper className={classes.paper}>\r\n                    <Grid container direction='column' alignItems='flex-start'>\r\n                      <Grid item>\r\n                        <Typography variant='h5'>\r\n                          7 Day Forecast\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Typography variant='body1' className={classes.subtitle}>\r\n                          {forecast.daily.summary}\r\n                        </Typography>\r\n                      </Grid>\r\n                      {\r\n                        forecast.daily != undefined ? \r\n                        forecast.daily.data.map((day) => \r\n                        <ForecastListItem key={day.time} day={day} />)\r\n                        : null\r\n                      }\r\n                    </Grid>\r\n                  </Paper>\r\n                </Grid>\r\n  \r\n              </Grid>\r\n            </Grid>\r\n            <Grid item md={8}>\r\n\r\n              <Grid container direction='column' spacing={2}>\r\n\r\n                <Grid item>\r\n                  <Panel data={forecast} icon='loc' variant='current-forecast-details' title={city} />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid container direction='row' spacing={2}>\r\n\r\n                    <Grid item md={6}>\r\n                      <Panel data={testText} icon='help' variant='text' title=\"Information\" />\r\n                    </Grid>\r\n\r\n                    <Grid item md={6}>\r\n                      <Panel data={testText} icon='help' variant='text' title=\"Information\" />\r\n                    </Grid>\r\n\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </Grid>\r\n              \r\n            </Grid>\r\n\r\n          </Grid>\r\n        </Container>\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={snackOpen}\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackClose}\r\n        >\r\n          <SnackBarContentWrapper\r\n            onClose={handleSnackClose}\r\n            variant={snackVar}\r\n            message={snackMsg}\r\n          />\r\n        </Snackbar>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}